package com.usama.productservicequery.kafka.listner;

import org.apache.kafka.common.requests.ProduceRequest;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

import com.usama.productservicequery.query.api.entity.ProductRequest;

@Component
public class KafkaListner {

	@KafkaListener(groupId = "kafkademogroup", topics = "kafkademotopic", containerFactory = "ProductRequestListener")
	public void consume(ProductRequest data) { 
		
		System.out.println(data);
		String mapperType = data.getMappingType().toLowerCase();
		
		switch (mapperType) {
		case "post": {
			postQuery(data.getProduct());
			break;
		}
		case "update": {
			updateQuery(data.getProduct());
			break;
		}
		case "delete": {
			deleteQuery(data.getProduct());
			break;
		}
		default:
			throw new IllegalArgumentException("Unexpected value: " + mapperType);
		}
		
		System.out.println(data.getClass());
	}
	
}
