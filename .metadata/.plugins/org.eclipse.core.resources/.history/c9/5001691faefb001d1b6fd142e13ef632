package com.usama.kafkademo.config;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.common.serialization.StringSerializer;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.core.DefaultKafkaProducerFactory;
import org.springframework.kafka.core.ProducerFactory;

@Configuration
public class KafkaConsumerConfig {
	

	@Value("${spring.kafka.bootstrap-service}")
	private String bootstrapString;

	
	public Map<String, Object> conumerConfig() {
		Map<String, Object> property = new HashMap<>();
		property.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapString);
		property.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
		property.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);

		return property;

	}

//	producer factory is responsible for creating Kafka producer instances
	@Bean
	public ProducerFactory<String, String> producerFactory() {
		return new DefaultKafkaProducerFactory<>(producerConfig());
	}

}
